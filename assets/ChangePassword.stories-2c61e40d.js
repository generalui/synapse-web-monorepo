import{j as e,a as _}from"./jsx-runtime-095bf462.js";import{r as s}from"./index-8db94870.js";import{d as a}from"./ToastMessage-c60353c5.js";import{u as x,S as h}from"./SynapseClient-f341520e.js";import{T as p}from"./TextField-7bb2cab4.js";import{B as b}from"./Button-6910d769.js";import"./_commonjsHelpers-042e6b4d.js";import"./FullWidthAlert-ac112c77.js";import"./AlertTitle-1c4986af.js";import"./styled-0d0c058b.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-8498a53a.js";import"./createSvgIcon-c04c1e3c.js";import"./Paper-c5bb6f3a.js";import"./IconButton-055a3ecb.js";import"./ButtonBase-89336bd6.js";import"./emotion-react.browser.esm-a1e35fdb.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-bbc222e1.js";import"./extendSxProp-32377841.js";import"./Stack-fc7a4170.js";import"./Box-ef0af35d.js";import"./useTheme-48a0a3fd.js";import"./Grow-abebdd1c.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-a7612588.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-ada0ed7d.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isArray-5e3f9107.js";import"./isSymbol-7c514724.js";import"./SynapseConstants-fca8ab5f.js";import"./OrientationBanner-ec8fcbed.js";import"./getEndpoint-ac94413e.js";import"./Link-c55ec6e2.js";import"./dayjs.min-8d4ef725.js";import"./index-58d3fd43.js";import"./CheckCircleTwoTone-a72e35ba.js";import"./inputBaseClasses-2d1e355f.js";import"./Fade-8ab202b4.js";import"./InputLabel-a4beb275.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-08f54e3c.js";import"./index-953d39fd.js";import"./Popover-35c1d8c6.js";import"./Modal-1e12e009.js";import"./Backdrop-85605ced.js";import"./getScrollbarSize-ac846fe6.js";import"./createChainedFunction-0bab83cf.js";import"./MenuList-e8a7bfde.js";const d=()=>{const{accessToken:o}=x(),[c,C]=s.useState(""),[m,y]=s.useState(""),[l,S]=s.useState(""),[n,u]=s.useState();s.useEffect(()=>{async function r(){const t=await h.getUserProfile(o);u(t)}o?r():u(void 0)},[o]);const w=async r=>{r.preventDefault();try{if(m!==l)a("New password and confirm password does not match.","danger");else if(o){const t={newPassword:m,concreteType:"org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword",username:n==null?void 0:n.userName,currentPassword:c};await h.changePasswordWithCurrentPassword(t,o).then(()=>a("Successfully changed","success")).catch(v=>a(v.reason,"danger"))}}catch(t){a(t.reason,"danger")}};return e("div",{className:"changePassword",children:_("form",{onSubmit:r=>{w(r)},children:[e(p,{id:"oldPassword",label:"Current Password",type:"password",onChange:r=>C(r.target.value),value:c,fullWidth:!0}),e(p,{id:"newPassword",label:"New Password",type:"password",onChange:r=>y(r.target.value),value:m,fullWidth:!0,margin:"normal"}),e(p,{id:"confirmPassword",label:"Confirm Password",type:"password",onChange:r=>S(r.target.value),value:l,fullWidth:!0,margin:"normal"}),e(b,{variant:"contained",color:"primary",type:"submit",onSubmit:r=>{w(r)},sx:{mt:2},children:"Change Password"})]})})};try{d.displayName="ChangePassword",d.__docgenInfo={description:"",displayName:"ChangePassword",props:{}}}catch{}const Wr={title:"Authentication/ChangePassword",component:d},i={};var g,P,f;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:"{}",...(f=(P=i.parameters)==null?void 0:P.docs)==null?void 0:f.source}}};const jr=["ChangePasswordDemo"];export{i as ChangePasswordDemo,jr as __namedExportsOrder,Wr as default};
//# sourceMappingURL=ChangePassword.stories-2c61e40d.js.map
