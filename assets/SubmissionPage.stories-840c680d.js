import{l as m}from"./index-d2b24c97.js";import{cx as e,ad as I,ae as _}from"./SynapseClient-f341520e.js";import{g as E,h as S,m as s}from"./MockSubmission-4b2d15e0.js";import{M as o}from"./getEndpoint-ac94413e.js";import{g as R,m as O}from"./mockRejectionReasonsTableQueryResultBundle-08b7789a.js";import{S as g}from"./SubmissionPage-f3417a58.js";import{a as C}from"./userProfileHandlers-e7eacef7.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-441245ad.js";import"./SynapseConstants-fca8ab5f.js";import"./OrientationBanner-ec8fcbed.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-ac112c77.js";import"./AlertTitle-1c4986af.js";import"./styled-0d0c058b.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-8498a53a.js";import"./createSvgIcon-c04c1e3c.js";import"./Paper-c5bb6f3a.js";import"./IconButton-055a3ecb.js";import"./ButtonBase-89336bd6.js";import"./emotion-react.browser.esm-a1e35fdb.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-f2b81dde.js";import"./useForkRef-f2aa3d66.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-bbc222e1.js";import"./extendSxProp-32377841.js";import"./Stack-fc7a4170.js";import"./Box-ef0af35d.js";import"./useTheme-48a0a3fd.js";import"./Grow-abebdd1c.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-a7612588.js";import"./ClickAwayListener-36b79525.js";import"./Tooltip-ada0ed7d.js";import"./Button-6910d769.js";import"./Link-c55ec6e2.js";import"./isArray-5e3f9107.js";import"./dayjs.min-8d4ef725.js";import"./index-58d3fd43.js";import"./CheckCircleTwoTone-a72e35ba.js";import"./inputBaseClasses-2d1e355f.js";import"./Fade-8ab202b4.js";import"./mock_file_handle-91d41d04.js";import"./mock_user_profile-ff8c0312.js";import"./times-23469bb8.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./mockWiki-cce19a55.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-6f1c6c29.js";import"./_baseClone-f57d488e.js";import"./_Uint8Array-b6f30a55.js";import"./_MapCache-1b8ab7d0.js";import"./_isIndex-af14b756.js";import"./DateFormatter-27dd40cf.js";import"./useDataAccessSubmission-25f7242b.js";import"./useMutation-90a3309e.js";import"./useInfiniteQuery-742a0dc6.js";import"./useAccessRequirements-61f7180f.js";import"./sortBy-0b5475df.js";import"./hasIn-b2d46eed.js";import"./_cacheHas-2850607e.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-64ea8530.js";import"./_isIterateeCall-f0476731.js";import"./ConfirmationDialog-00076daa.js";import"./jsx-runtime_commonjs-proxy-5541547e.js";import"./createChainedFunction-0bab83cf.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-08f54e3c.js";import"./WideButton-bd0b4267.js";import"./IsType-6afea24e.js";import"./LoadingScreen-5d3f898f.js";import"./LinearProgress-8f888fd4.js";import"./Backdrop-85605ced.js";import"./UserCard-b4f096e5.js";import"./SkeletonTable-d99c7f04.js";import"./Skeleton-79583c46.js";import"./IconSvg-b6907485.js";import"./ErrorOutlined-81a5221b.js";import"./InfoOutlined-1e8e00a7.js";import"./ToastMessage-c60353c5.js";import"./hasClass-ec9efd32.js";import"./Popover-35c1d8c6.js";import"./Modal-1e12e009.js";import"./getScrollbarSize-ac846fe6.js";import"./RegularExpressions-bc0adf55.js";import"./react-intersection-observer.modern-64b519d2.js";import"./EntityTypeUtils-e39da199.js";import"./EntityIcon-5a5d83ed.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index.modern-3065d269.js";import"./mapValues-983fc0db.js";import"./isPlainObject-419b8fb9.js";import"./now-7dd5f6e5.js";import"./unCamelCase-24f77487.js";import"./without-fd1eb24b.js";import"./isArrayLikeObject-0038fa24.js";import"./pick-f00c427f.js";import"./_baseSlice-cf92e063.js";import"./uniq-9bbebc7d.js";import"./RequestDownloadCard-4c66fe30.js";import"./ActionRequiredCard-0efdd6b3.js";import"./Icon-0273dfb9.js";import"./factory-837f2467.js";import"./SqlFunctions-1fd3974d.js";import"./useEntity-b527573f.js";import"./SynapseTableConstants-942d2b0b.js";import"./use-deep-compare-effect.esm-08e85271.js";import"./index-5d0cf067.js";import"./useDownloadList-eaad1bed.js";import"./useGetQueryResultBundle-d1ccbb43.js";import"./merge-ec662195.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./index-953d39fd.js";import"./queryUtils-bc736e49.js";import"./UserSearchBoxV2-536afb98.js";import"./Select-457c486b.esm-8c4afcea.js";import"./isNativeReflectConstruct-e378569d.js";import"./UserOrTeamBadge-522981a8.js";import"./StandaloneLoginForm-6f98e2fc.js";import"./LoginFlowBackButton-2546bbc2.js";import"./TextField-7bb2cab4.js";import"./InputLabel-a4beb275.js";import"./MenuList-e8a7bfde.js";import"./TextField-b3bab9ad.js";import"./DialogTitle-55875a60.js";import"./RadioGroup-bf0fed90.js";import"./Form-8379b171.js";import"./ThemeProvider-c7f6a893.js";import"./Col-78ecc132.js";import"./createWithBsPrefix-b82f3f4a.js";import"./FileUpload-1c0d6e7e.js";import"./Divider-ac94dde5.js";import"./dividerClasses-a42a4a88.js";import"./AuthenticatedRequirement-92ee1e5a.js";import"./RequirementItem-66617ba1.js";import"./ConditionalWrapper-51b8d1ed.js";import"./Avatar-30520b29.js";import"./CertificationRequirement-be8a5bf9.js";import"./ValidationRequirement-07220e0a.js";import"./TwoFactorAuthEnabledRequirement-d722540a.js";import"./TwoFactorEnrollmentForm-6b31fd91.js";import"./LeftRightPanel-d31df08b.js";import"./ElementWithTooltip-7b78545e.js";import"./Tabs-edb6b3f8.js";import"./QueryCount-b2e75918.js";import"./RangeSlider-03f073f6.js";import"./react-sizeme-0d7fb727.js";import"./ColorGradient-fc5a110b.js";import"./colorPalette-43310703.js";import"./SelectionCriteriaPill-059b944d.js";import"./ErrorChip-89c4d88c.js";import"./IconList-8d786beb.js";import"./UserCardList-35b47302.js";import"./EntityLink-f1830939.js";import"./SynapseVideo-4617402f.js";import"./WarningDialog-8e3f2b1f.js";import"./RejectDataAccessRequestModal-e36e1a63.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-fd939b92.js";import"./upperFirst-79e605a3.js";import"./toLower-271fcf43.js";import"./mockFileEntity-7783a9db.js";const $i={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(o),...E(o),m.rest.get(`${o}${e(":id")}`,async(i,t,r)=>{const d=S.find(u=>i.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${o}${I(":id")}`,async(i,t,r)=>t(r.status(200),r.json(s))),m.rest.get(`${o}${_(":id")}`,async(i,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:s.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${o}/repo/v1/accessRequirement/:id/acl`,async(i,t,r)=>t(r.status(200),r.json({id:i.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${o}${e(":id")}`,async(i,t,r)=>t(r.status(201),r.json(await i.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const yi=["Demo"];export{p as Demo,yi as __namedExportsOrder,$i as default};
//# sourceMappingURL=SubmissionPage.stories-840c680d.js.map
