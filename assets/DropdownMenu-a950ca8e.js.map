{"version":3,"file":"DropdownMenu-a950ca8e.js","sources":["../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemText/ListItemText.js","../../src/components/menu/DropdownMenu.tsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import React, { useId } from 'react'\nimport {\n  Button,\n  ButtonProps,\n  ClickAwayListener,\n  Divider,\n  Fade,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n  SxProps,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport IconSvg, { IconName } from '../IconSvg/IconSvg'\n\n/**\n * Defines a configuration for a particular dropdown menu item\n */\nexport type DropdownMenuItem = {\n  /* The text to show on the menu item. */\n  text: string\n  /* The icon to show for this item in the menu. */\n  icon?: IconName\n  /* A function invoked upon clicking the item, assuming `disabled` is falsy */\n  onClick?: (e: React.MouseEvent) => void\n  /* A link that the item should point to. */\n  href?: string\n  /* The optional tooltipText to show for this item. Compatible with the `disabled` prop. */\n  tooltipText?: string\n  /* Whether the item should be disabled from selection. */\n  disabled?: boolean\n  /* Additional MUI SxProps to pass to the text component */\n  textSx?: SxProps\n  /* Additional MUI SxProps to pass to the icon component */\n  iconSx?: SxProps\n}\n\nexport type DropdownMenuProps = {\n  /* Groups of menu items. Each group will be split with a divider. See DropdownMenuItem for per-item configuration */\n  items: DropdownMenuItem[][]\n  /* The text to show on the dropdown menu button. */\n  dropdownButtonText: string\n  /* The optional tooltip text for the dropdown menu button. */\n  buttonTooltip?: string\n  /* Any additional props to pass to the dropdown menu button. */\n  buttonProps?: ButtonProps\n  /* If true, will render a single action as a standalone button. Default true. */\n  convertSingleItemToButton?: boolean\n  /* If true, nothing will be rendered if no actions are passed. Default false. */\n  renderMenuIfNoItems?: boolean\n}\n\n/**\n * The DropdownMenu component provides a generic way to compose a MUI dropdown menu.\n */\nexport function DropdownMenu(props: DropdownMenuProps) {\n  const {\n    buttonTooltip,\n    dropdownButtonText,\n    items = [] as DropdownMenuItem[][],\n    convertSingleItemToButton = true,\n    renderMenuIfNoItems = false,\n    buttonProps = {},\n  } = props\n\n  const dropdownMenuId = useId()\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n\n  const numberOfMenuItems = items.flat().length\n\n  if (!renderMenuIfNoItems && numberOfMenuItems === 0) {\n    // Hide menu if no actions will be in the menu\n    return null\n  }\n\n  if (convertSingleItemToButton && numberOfMenuItems === 1) {\n    // If one action is in the menu, show it as a button\n    const menuItem = items.flat()[0]\n    return (\n      <Button\n        component={'href' in menuItem ? 'a' : 'button'}\n        title={menuItem.tooltipText}\n        variant=\"outlined\"\n        href={'href' in menuItem ? menuItem.href : undefined}\n        rel={'href' in menuItem ? 'noopener noreferrer' : undefined}\n        onClick={'onClick' in menuItem ? menuItem.onClick : undefined}\n        disabled={menuItem.disabled}\n      >\n        <Typography variant={'buttonLink'}>{menuItem.text}</Typography>\n      </Button>\n    )\n  }\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen)\n  }\n\n  const handleClose = (event: Event | React.SyntheticEvent) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    if (event.key === 'Tab') {\n      event.preventDefault()\n      setOpen(false)\n    } else if (event.key === 'Escape') {\n      setOpen(false)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        title={\n          buttonTooltip ? (\n            <div style={{ whiteSpace: 'pre-line' }}>{buttonTooltip}</div>\n          ) : undefined\n        }\n        placement={'top'}\n      >\n        <span>\n          <Button\n            variant=\"outlined\"\n            ref={anchorRef}\n            id={`composition-button-${dropdownMenuId}`}\n            aria-controls={\n              open ? `composition-menu-${dropdownMenuId}` : undefined\n            }\n            aria-expanded={open ? 'true' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n            {...buttonProps}\n          >\n            <Typography variant={'buttonLink'}>{dropdownButtonText}</Typography>\n          </Button>\n        </span>\n      </Tooltip>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        placement=\"bottom-end\"\n        transition\n        style={{\n          // Fixes issue where react-flow (provenance) would appear above the menu\n          zIndex: 10,\n        }}\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps}>\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList\n                  autoFocusItem={open}\n                  id={`composition-menu-${dropdownMenuId}`}\n                  aria-labelledby={`composition-button-${dropdownMenuId}`}\n                  onKeyDown={handleListKeyDown}\n                >\n                  {items.map((itemGroup, index, array) => {\n                    return [\n                      itemGroup.map(item => {\n                        return (\n                          <Tooltip\n                            key={item.text}\n                            title={item.tooltipText}\n                            placement={'left'}\n                          >\n                            <MenuItem\n                              // Always make the component an anchor in case href is defined.\n                              component=\"a\"\n                              sx={{\n                                // Override the anchor-specific state styles, we don't want it to look like an anchor\n                                '&:hover': {\n                                  color: 'unset',\n                                },\n                                '&:focus': {\n                                  color: 'unset',\n                                  textDecoration: 'unset',\n                                },\n                              }}\n                              disabled={item.disabled}\n                              href={'href' in item ? item.href : undefined}\n                              rel={\n                                'href' in item\n                                  ? 'noopener noreferrer'\n                                  : undefined\n                              }\n                              // Allow pointer events on disabled item so tooltip works.\n                              style={{ pointerEvents: 'auto' }}\n                              onClick={(e: React.MouseEvent) => {\n                                /*\n                                 * Must check if the item is disabled because we set\n                                 * `pointer-events: 'auto'`\n                                 */\n                                if (\n                                  !item.disabled &&\n                                  'onClick' in item &&\n                                  item.onClick\n                                ) {\n                                  setOpen(false)\n                                  item.onClick(e)\n                                }\n                              }}\n                            >\n                              <ListItemIcon\n                                style={{\n                                  // MUI has specified a more specific minWidth for ListItemIcon inside a MenuList than\n                                  // we can create with sx, so apply an inline style for this property only.\n                                  minWidth: '30px',\n                                }}\n                              >\n                                {item.icon && (\n                                  <IconSvg\n                                    icon={item.icon}\n                                    sx={{\n                                      width: '17px',\n                                      height: '17px',\n                                      ...item.iconSx,\n                                    }}\n                                    wrap={false}\n                                  />\n                                )}\n                              </ListItemIcon>\n                              <ListItemText\n                                primaryTypographyProps={{\n                                  variant: 'smallText1',\n                                  sx: item.textSx,\n                                }}\n                                sx={{ marginTop: 0 }}\n                              >\n                                {item.text}\n                              </ListItemText>\n                            </MenuItem>\n                          </Tooltip>\n                        )\n                      }),\n                      index < array.length - 1 && <Divider />,\n                    ]\n                  })}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n    </React.Fragment>\n  )\n}\n"],"names":["_excluded","useUtilityClasses","ownerState","alignItems","classes","composeClasses","getListItemIconUtilityClass","ListItemIconRoot","styled","props","styles","theme","_extends","ListItemIcon","React.forwardRef","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","context","React.useContext","ListContext","_jsx","clsx","ListItemIcon$1","inset","primary","secondary","dense","getListItemTextUtilityClass","ListItemTextRoot","listItemTextClasses","ListItemText","children","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","Typography","_jsxs","ListItemText$1","DropdownMenu","buttonTooltip","dropdownButtonText","items","convertSingleItemToButton","renderMenuIfNoItems","buttonProps","dropdownMenuId","useId","open","setOpen","React","anchorRef","numberOfMenuItems","menuItem","jsx","Button","handleToggle","prevOpen","handleClose","event","handleListKeyDown","jsxs","Tooltip","Popper","TransitionProps","Fade","Paper","ClickAwayListener","MenuList","itemGroup","index","array","item","MenuItem","e","IconSvg","Divider"],"mappings":"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","x_google_ignoreList":[0,1]}